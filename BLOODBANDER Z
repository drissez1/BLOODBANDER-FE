local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "BLOODBANDER-FE (Beta)",
   LoadingTitle = "Wait",
   LoadingSubtitle = "by iDrxp and Paullennox31",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },
   Discord = {
      Enabled = true,
      Invite = "GXgGmDy3", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = fals, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("Main",nil) -- Title, Image
local MainSection = MainTab:CreateSection("Main")

local PlayerTab = Window:CreateTab("Player",nil) -- Title, Image
local PlayerSection = PlayerTab:CreateSection("Player")

local Slider = PlayerTab:CreateSlider({
   Name = "Speed",
   Range = {0, 300},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
   end,
})
local Slider = PlayerTab:CreateSlider({
   Name = "JumpPower",
   Range = {0, 300},
   Increment = 1,
   Suffix = "jumppower",
   CurrentValue = 16,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   game.Players.LocalPlayer.Character.Humanoid.JumpPower = (Value)
   end,
})
local Slider = PlayerTab:CreateSlider({
   Name = "Gravity",
   Range = {0, 300},
   Increment = 1,
   Suffix = "Gravity",
   CurrentValue = 16,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   game.workspace.Gravity = (Value)
   end,
})
local PlayerSection = PlayerTab:CreateSection("inf jump")

local Button = PlayerTab:CreateButton({
   Name = "inf jump",
   Callback = function()
   local InfiniteJumpEnabled = true
game:GetService("UserInputService").JumpRequest:connect(function()
	if InfiniteJumpEnabled then
		game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
	end
end)
   end,
})




local PlayerSection = PlayerTab:CreateSection("fly v3")

local Button = PlayerTab:CreateButton({
   Name = "fly v3",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt"))()
   end,
})

local AimbotTab = Window:CreateTab("Aimbot/esp",nil) -- Title, Image
local AimbotSection = AimbotTab:CreateSection("Aimbot")

local Button = AimbotTab:CreateButton({
   Name = "Aimbot (for every game) log = schift",
   Callback = function()
   -- aim configuration
local aim_config = _G.JALON_AIMCONFIG or {
	Enabled = true,
	KeyActivation = Enum.KeyCode.LeftShift,

	FOV = 180,
	TeamCheck = fals,
	DistanceCheck = fals,
	VisibleCheck = true,

	Smoothness = 0.975,
	Prediction = {
		Enabled = false,
		Value = 0.185
	}
}
_G.JALON_AIMCONFIG = _G.JALON_AIMCONFIG or aim_config

-- services
local input_service = game:GetService("UserInputService")
local players = game:GetService("Players")
local run_service = game:GetService("RunService")

-- objects
local camera = workspace.CurrentCamera
local player = players.LocalPlayer
local fovCircle, targetBox = Drawing.new("Circle"), Drawing.new("Square")

-- variables
local current_nearest_plr

-- functions
local function is_player_valid(plrArg)
	local plrChar = plrArg.Character
	local plrHumanoid, target_part = (plrChar and plrChar:FindFirstChildWhichIsA("Humanoid")), (plrChar and plrChar:FindFirstChild("HumanoidRootPart"))
	return plrArg ~= player and (plrChar and (plrHumanoid and plrHumanoid.Health ~= 0)) and not plrArg.Character:FindFirstChildWhichIsA("ForceField") and (if aim_config.TeamCheck then (plrArg.Neutral or plrArg.TeamColor ~= player.TeamColor) else true), target_part
end

local function get_rootpart(plr)
	return (if plr.Character then plr.Character:FindFirstChild("HumanoidRootPart") else nil)
end

local function in_line_of_sight(origin_pos, ...)
	return #camera:GetPartsObscuringTarget({origin_pos}, {camera, player.Character, ...}) == 0
end

local function get_vel_prediction(velocity)
	return Vector3.new(velocity.X, math.clamp((velocity.Y * 0.5), -5, 10), velocity.Z)
end

local function get_camera_prediction(predicting_part)
	return predicting_part.CFrame + get_vel_prediction(predicting_part.Velocity) * (aim_config.Prediction.Value)
end

-- gets nearest player relative to cursor
local function get_nearest_player()
	local nearest_plr_data = {aimPart = nil, cursor_dist = math.huge, char_dist = math.huge}

	for _, plr in players:GetPlayers() do
		local passed, target_part = is_player_valid(plr)
		if not (passed and target_part) then continue end
		local screen_pos, on_screen = camera:WorldToViewportPoint(target_part.Position)
		local fov_dist = (input_service:GetMouseLocation() - Vector2.new(screen_pos.X, screen_pos.Y)).Magnitude
		local char_dist = (get_rootpart(player).Position - target_part.Position).Magnitude

		if (not aim_config.VisibleCheck or (on_screen and in_line_of_sight(camera.CFrame, plr.Character))) then
			if ((fov_dist <= aim_config.FOV) and (fov_dist < nearest_plr_data.cursor_dist)) and (not aim_config.DistanceCheck or (char_dist < nearest_plr_data.char_dist)) then
				nearest_plr_data.aimPart = target_part
				nearest_plr_data.cursor_dist = fov_dist
				nearest_plr_data.char_dist = char_dist
			end
		end
	end
	return (if nearest_plr_data.aimPart then nearest_plr_data else nil)
end

-- main
targetBox.Color = Color3.fromRGB(0, 185, 35)
targetBox.Filled = true
targetBox.Size = Vector2.new(20, 20)
targetBox.Thickness = 20
targetBox.Transparency = .6

fovCircle.Color = Color3.fromRGB(0, 185, 35)
fovCircle.Thickness = 2
fovCircle.Transparency = .6
fovCircle.Visible = true

run_service.PreSimulation:Connect(function()
	current_nearest_plr = get_nearest_player()

	fovCircle.Radius = aim_config.FOV
	fovCircle.Position = input_service:GetMouseLocation()

	if current_nearest_plr then
		local screen_pos, on_screen = camera:WorldToViewportPoint(current_nearest_plr.aimPart.Position)

		targetBox.Visible = on_screen
		targetBox.Position = (Vector2.new(screen_pos.X, screen_pos.Y) - (targetBox.Size / 2))

		if input_service:IsKeyDown(aim_config.KeyActivation) then
			local target_position = (if aim_config.Prediction.Enabled then get_camera_prediction(current_nearest_plr.aimPart) else current_nearest_plr.aimPart)
			local horizontal_look = CFrame.lookAt(camera.CFrame.Position, target_position.Position)

			camera.CFrame = camera.CFrame:Lerp(horizontal_look, aim_config.Smoothness)
		end
	else
		targetBox.Visible = false
		targetBox.Position = Vector3.zero
	end
end)
   end,
})

local AimbotSection = AimbotTab:CreateSection("esp")


local Button = AimbotTab:CreateButton({
Name = "esp",
 Callback = function()
 loadstring(game:HttpGet('https://raw.githubusercontent.com/ic3w0lf22/Unnamed-ESP/master/UnnamedESP.lua'))()
 end,
})              

                
local FunyTab = Window:CreateTab("Funy/script",nil) -- Title, Image
local FunySection = FunyTab:CreateSection("Blade ball")

local Button = FunyTab:CreateButton({
Name = "Blade ball",
 Callback = function()
 loadstring(game:HttpGet("https://raw.githubusercontent.com/FFJ1/Roblox-Exploits/main/scripts/Loader.lua"))()
 end,
})             

local AimbotSection = AimbotTab:CreateSection("Da hod")
                
local Button = AimbotTab:CreateButton({
Name = "Da hod lock = Z",
 Callback = function()
 loadstring(game:HttpGet("https://raw.githubusercontent.com/drissez1/Lock/main/Lock"))()
 end,
})              

local FunySection = FunyTab:CreateSection("Da hod ")
                
local Button = FunyTab:CreateButton({
Name = "Da hod autofarm 6$ s (Rejoin to stop)",
 Callback = function()
  game:GetService("Workspace").MAP.Map["hood kicks"]:Destroy()
print("da hood autofarm lol")
while wait(1) do --make it what u want
local descendants = game.Workspace.Ignored.Drop:GetDescendants()
for index, descendant in pairs(descendants) do
   if descendant.Name == "MeshPart" then  
  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(descendant.Position)
  game.Players.LocalPlayer.Character.Humanoid.Jump = true
  wait(1)
      fireclickdetector(game.Workspace.Ignored.Drop.MeshPart.ClickDetector)
      wait(1)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Ignored["Clean the shoes on the floor and come to me for cash"].LowerTorso.CFrame
fireclickdetector(game:GetService("Workspace").Ignored["Clean the shoes on the floor and come to me for cash"].ClickDetector)
wait(1)
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end
end
end
 end,
})              

local Button = FunyTab:CreateButton({
   Name = "OP da hod script",
    Callback = function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/NighterEpic/Faded/main/YesEpic", true))()  
    end,
   }) 

local FunySection = FunyTab:CreateSection("Flying all")              
                
local Button = FunyTab:CreateButton({
Name = "Fling all",
 Callback = function()
   local Targets = {"All"} -- "All", "Target Name", "arian_was_here"

   local Players = game:GetService("Players")
   local Player = Players.LocalPlayer
   
   local AllBool = false
   
   local GetPlayer = function(Name)
       Name = Name:lower()
       if Name == "all" or Name == "others" then
           AllBool = true
           return
       elseif Name == "random" then
           local GetPlayers = Players:GetPlayers()
           if table.find(GetPlayers,Player) then table.remove(GetPlayers,table.find(GetPlayers,Player)) end
           return GetPlayers[math.random(#GetPlayers)]
       elseif Name ~= "random" and Name ~= "all" and Name ~= "others" then
           for _,x in next, Players:GetPlayers() do
               if x ~= Player then
                   if x.Name:lower():match("^"..Name) then
                       return x;
                   elseif x.DisplayName:lower():match("^"..Name) then
                       return x;
                   end
               end
           end
       else
           return
       end
   end
   
   local Message = function(_Title, _Text, Time)
       game:GetService("StarterGui"):SetCore("SendNotification", {Title = _Title, Text = _Text, Duration = Time})
   end
   
   local SkidFling = function(TargetPlayer)
       local Character = Player.Character
       local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
       local RootPart = Humanoid and Humanoid.RootPart
   
       local TCharacter = TargetPlayer.Character
       local THumanoid
       local TRootPart
       local THead
       local Accessory
       local Handle
   
       if TCharacter:FindFirstChildOfClass("Humanoid") then
           THumanoid = TCharacter:FindFirstChildOfClass("Humanoid")
       end
       if THumanoid and THumanoid.RootPart then
           TRootPart = THumanoid.RootPart
       end
       if TCharacter:FindFirstChild("Head") then
           THead = TCharacter.Head
       end
       if TCharacter:FindFirstChildOfClass("Accessory") then
           Accessory = TCharacter:FindFirstChildOfClass("Accessory")
       end
       if Accessoy and Accessory:FindFirstChild("Handle") then
           Handle = Accessory.Handle
       end
   
       if Character and Humanoid and RootPart then
           if RootPart.Velocity.Magnitude < 50 then
               getgenv().OldPos = RootPart.CFrame
           end
           if THumanoid and THumanoid.Sit and not AllBool then
               return Message("Error Occurred", "Targeting is sitting", 5) -- u can remove dis part if u want lol
           end
           if THead then
               workspace.CurrentCamera.CameraSubject = THead
           elseif not THead and Handle then
               workspace.CurrentCamera.CameraSubject = Handle
           elseif THumanoid and TRootPart then
               workspace.CurrentCamera.CameraSubject = THumanoid
           end
           if not TCharacter:FindFirstChildWhichIsA("BasePart") then
               return
           end
           
           local FPos = function(BasePart, Pos, Ang)
               RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang
               Character:SetPrimaryPartCFrame(CFrame.new(BasePart.Position) * Pos * Ang)
               RootPart.Velocity = Vector3.new(9e7, 9e7 * 10, 9e7)
               RootPart.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
           end
           
           local SFBasePart = function(BasePart)
               local TimeToWait = 2
               local Time = tick()
               local Angle = 0
   
               repeat
                   if RootPart and THumanoid then
                       if BasePart.Velocity.Magnitude < 50 then
                           Angle = Angle + 100
   
                           FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle),0 ,0))
                           task.wait()
   
                           FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                           task.wait()
   
                           FPos(BasePart, CFrame.new(2.25, 1.5, -2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                           task.wait()
   
                           FPos(BasePart, CFrame.new(-2.25, -1.5, 2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                           task.wait()
   
                           FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
                           task.wait()
   
                           FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
                           task.wait()
                       else
                           FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                           task.wait()
   
                           FPos(BasePart, CFrame.new(0, -1.5, -THumanoid.WalkSpeed), CFrame.Angles(0, 0, 0))
                           task.wait()
   
                           FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                           task.wait()
                           
                           FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                           task.wait()
   
                           FPos(BasePart, CFrame.new(0, -1.5, -TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(0, 0, 0))
                           task.wait()
   
                           FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                           task.wait()
   
                           FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(90), 0, 0))
                           task.wait()
   
                           FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                           task.wait()
   
                           FPos(BasePart, CFrame.new(0, -1.5 ,0), CFrame.Angles(math.rad(-90), 0, 0))
                           task.wait()
   
                           FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                           task.wait()
                       end
                   else
                       break
                   end
               until BasePart.Velocity.Magnitude > 500 or BasePart.Parent ~= TargetPlayer.Character or TargetPlayer.Parent ~= Players or not TargetPlayer.Character == TCharacter or THumanoid.Sit or Humanoid.Health <= 0 or tick() > Time + TimeToWait
           end
           
           workspace.FallenPartsDestroyHeight = 0/0
           
           local BV = Instance.new("BodyVelocity")
           BV.Name = "EpixVel"
           BV.Parent = RootPart
           BV.Velocity = Vector3.new(9e8, 9e8, 9e8)
           BV.MaxForce = Vector3.new(1/0, 1/0, 1/0)
           
           Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
           
           if TRootPart and THead then
               if (TRootPart.CFrame.p - THead.CFrame.p).Magnitude > 5 then
                   SFBasePart(THead)
               else
                   SFBasePart(TRootPart)
               end
           elseif TRootPart and not THead then
               SFBasePart(TRootPart)
           elseif not TRootPart and THead then
               SFBasePart(THead)
           elseif not TRootPart and not THead and Accessory and Handle then
               SFBasePart(Handle)
           else
               return Message("Error Occurred", "Target is missing everything", 5)
           end
           
           BV:Destroy()
           Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
           workspace.CurrentCamera.CameraSubject = Humanoid
           
           repeat
               RootPart.CFrame = getgenv().OldPos * CFrame.new(0, .5, 0)
               Character:SetPrimaryPartCFrame(getgenv().OldPos * CFrame.new(0, .5, 0))
               Humanoid:ChangeState("GettingUp")
               table.foreach(Character:GetChildren(), function(_, x)
                   if x:IsA("BasePart") then
                       x.Velocity, x.RotVelocity = Vector3.new(), Vector3.new()
                   end
               end)
               task.wait()
           until (RootPart.Position - getgenv().OldPos.p).Magnitude < 25
           workspace.FallenPartsDestroyHeight = getgenv().FPDH
       else
           return Message("Error Occurred", "Random error", 5)
       end
   end
   
   if not Welcome then Message("Script by AnthonyIsntHere", "Enjoy!", 5) end
   getgenv().Welcome = true
   if Targets[1] then for _,x in next, Targets do GetPlayer(x) end else return end
   
   if AllBool then
       for _,x in next, Players:GetPlayers() do
           SkidFling(x)
       end
   end
   
   for _,x in next, Targets do
       if GetPlayer(x) and GetPlayer(x) ~= Player then
           if GetPlayer(x).UserId ~= 1414978355 then
               local TPlayer = GetPlayer(x)
               if TPlayer then
                   SkidFling(TPlayer)
               end
           else
               Message("Error Occurred", "This user is whitelisted! (Owner)", 5)
           end
       elseif not GetPlayer(x) and not AllBool then
           Message("Error Occurred", "Username Invalid", 5)
       end
   end
 end,
})  

local Paragraph = MainTab:CreateParagraph({Title = "Crate by iDrxp and Paullennox31", Content = "------------------------------------------------"})
local FunySection = MainTab:CreateSection("Info !")
local Paragraph = MainTab:CreateParagraph({Title = "this script is a (beta)", Content = "there are always new updates"})


local FunySection = FunyTab:CreateSection("Car speed mod car") 

local Button = FunyTab:CreateButton({
   Name = "Car speed mod car",
    Callback = function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/Documantation12/Universal-Vehicle-Script/main/Main.lua'))()
    end,
   }) 

   local FunySection = FunyTab:CreateSection("Chat trool")       
                
   local Button = FunyTab:CreateButton({
      Name = "Chat trool",
       Callback = function()
         loadstring(game:HttpGet("https://raw.githubusercontent.com/game-hax/uca/main/release/uca.min.lua"))()
       end,
      }) 

      local FunySection = FunyTab:CreateSection("Emot list")
    

      local Button = FunyTab:CreateButton({
        Name = "Emot list",
         Callback = function()
         loadstring(game:HttpGet("https://scriptblox.com/raw/Brookhaven-RP-all-emotes-6849"))()
         end,
        }) 
script.txt
22 Ko
